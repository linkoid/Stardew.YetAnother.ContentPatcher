@page "/converter"
@inject ILogger<Converter> Logger

<PageTitle>Json to Yaml Converter</PageTitle>

<h1>Json to Yaml Converter</h1>

<span style="color: darkred">@errorMessage</span>

<EditForm EditContext="editContext" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div style="display:flex;">
        <div style="display:block;width:100%;">
            <label style="width:100%;">Json:</label>
            <InputTextArea @bind-Value="Model!.JsonString" style="width:100%;height:400px;" />
        </div>
        <div style="display:block;width:10%;"></div>
        <div style="display:block;width:100%;">
            <label style="width:100%;">Yaml:</label>
            <InputTextArea @bind-Value="Model!.YamlString" style="width:100%;height:400px;" />
        </div>
    </div>
    <div>
        <button type="submit">Convert</button>
    </div>
</EditForm>




@code {
    private EditContext? editContext;
    private JsonToYamlConverter Model { get; set; } = new();
    private string? errorMessage;

    protected override void OnInitialized()
    {
        editContext = new(Model);
    }

    private void Submit()
    {
        errorMessage = "";

        if (editContext != null && editContext.Validate())
        {
            try
            {
                var jtokens = Model.ParseJson(Model.JsonString);
                Model.YamlString = Model.ConvertToYaml(jtokens);
                Logger.LogInformation("Submit called: Form is valid");
            }
            catch (JsonException ex)
            {
                errorMessage = $"Invalid JSON: {ex.Message}";
            }
            catch (YamlException ex)
            {
                errorMessage = $"YAML Error: {ex.Message}";
            }
            catch (Exception ex)
            {
                errorMessage = $"{ex.GetType().Name}: {ex.Message}";
            }
        }
        else
        {
            errorMessage = "form is invalid";
            Logger.LogInformation("Submit called: Form is INVALID");
        }
    }
}
